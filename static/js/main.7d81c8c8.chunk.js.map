{"version":3,"sources":["static/minus.svg","static/plus.svg","static/heart.svg","playSound.js","components/NumericControl/index.jsx","constants.jsx","components/SoundTypeControl/index.jsx","components/Key/index.jsx","hooks.js","components/ButtonBox/index.jsx","components/Footer/index.jsx","Synth.js","serviceWorker.js","index.js"],"names":["module","exports","playSound","NumericControl","value","setValue","increment","message","min","max","useState","pushedButton","setPushedButton","conditionMax","conditionMin","className","classnames","ActivePushButton","onMouseDown","onMouseUp","onClick","src","minus","alt","aria-label","data-balloon-pos","plus","keysToNotes","split","messages","soundTypes","frequencies","SoundType","type","active","SoundTypeControl","map","t","key","AudioContext","window","webkitAudioContext","context","frequency","duration","oscillator","createOscillator","gain","createGain","now","currentTime","connect","destination","setValueAtTime","exponentialRampToValueAtTime","start","stop","alert","blackKeys","Key","keyboardCode","index","isBlack","indexOf","mousePressed","setMousePressed","keyPressed","targetKey","pressed","setPressed","onKeyDown","onKeyUp","useEffect","addEventListener","removeEventListener","useKey","useContext","SoundContext","octave","Black","Pressed","MousePressed","ButtonBox","showMessages","heart","href","React","createContext","Separator","Synth","largeSceen","query","matchMedia","matches","setMatches","media","listener","addListener","removeListener","useMedia","clonedSet","setKey","Set","keysPressed","setKeyPressed","e","add","delete","useKeysPress","setType","setOctave","setDuration","Math","Provider","Footer","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d81c8c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/minus.4f28c0eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.e744f4ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.b5e5a96a.svg\";","let AudioContext =\n    window.AudioContext || // Default\n    window.webkitAudioContext || // Safari and old versions of Chrome\n    false;\nlet playSound;\n\nif (AudioContext) {\n    const context = new AudioContext();\n    playSound = (frequency, type, duration) => {\n        const oscillator = context.createOscillator();\n        const gain = context.createGain();\n        const now = context.currentTime;\n\n        oscillator.type = type;\n        oscillator.connect(gain);\n        oscillator.frequency.value = frequency;\n\n        gain.connect(context.destination);\n\n        gain.gain.setValueAtTime(1, now);\n        gain.gain.exponentialRampToValueAtTime(0.00001, now + duration);\n\n        oscillator.start(now);\n        oscillator.stop(now + duration);\n    };\n} else {\n    alert(\n        'Sorry, but the Web Audio API is not supported by your browser. Please, consider upgrading to the latest version or downloading Google Chrome or Mozilla Firefox'\n    );\n    playSound = () => {};\n}\n\nexport default playSound;\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\n\nimport minus from '../../static/minus.svg';\nimport plus from '../../static/plus.svg';\n\nconst NumericControl = ({ value, setValue, increment, message, min, max }) => {\n    const [pushedButton, setPushedButton] = useState(null);\n    const conditionMax = max ? value + increment <= max : true;\n    const conditionMin = min ? value - increment >= min : true;\n    return (\n        <>\n            <span\n                className={classnames('PushButton', {\n                    ActivePushButton: pushedButton === 'up'\n                })}\n                onMouseDown={() => {\n                    setPushedButton('up');\n                }}\n                onMouseUp={() => {\n                    setPushedButton();\n                }}\n                onClick={() => conditionMin && setValue(value - increment)}\n            >\n                <img src={minus} alt=\"minus\" />\n            </span>\n            <span\n                aria-label={message}\n                data-balloon-pos=\"up\"\n                className=\"OctaveControl\"\n            >\n                {value}\n            </span>\n            <span\n                className={classnames('PushButton', {\n                    ActivePushButton: pushedButton === 'down'\n                })}\n                onMouseDown={() => {\n                    setPushedButton('down');\n                }}\n                onMouseUp={() => {\n                    setPushedButton();\n                }}\n                onClick={() => conditionMax && setValue(value + increment)}\n            >\n                <img src={plus} alt=\"plus\" />\n            </span>\n        </>\n    );\n};\n\nexport default NumericControl;\n","export const keysToNotes = \"awsedftgyhujkolp;'\".split('');\n\nexport const messages = [\n    'Hey!',\n    null,\n    'Welcome 😀',\n    null,\n    null,\n    'Did you know 🤔',\n    null,\n    'You can use your keyboard ⌨️',\n    'To play? 🎹',\n    null,\n    'Try it!',\n    'this is `J`',\n    'K',\n    'and so on',\n    null,\n    'Enjoy 🤩'\n];\n\nexport const soundTypes = ['triangle', 'square', 'sine', 'sawtooth'];\n\nexport const frequencies = [\n    261.6,\n    277.2,\n    293.7,\n    311.1,\n    329.6,\n    349.2,\n    370.0,\n    392.0,\n    415.3,\n    440.0,\n    466.2,\n    493.9,\n    523.3,\n    554.4,\n    587.3,\n    622.3,\n    659.3,\n    698.5\n];\n\nexport const notes = [\n    'C',\n    'C#',\n    'D',\n    'Eb',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n    'A',\n    'Bb',\n    'B',\n    'C'\n];\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { soundTypes } from '../../constants';\n\nconst SoundType = ({ type, active, onClick }) => (\n    <div\n        className={classnames('PushButton', {\n            ActivePushButton: type === active\n        })}\n        onClick={() => onClick(type)}\n    >\n        {type}\n    </div>\n);\n\nconst SoundTypeControl = ({ active, onClick }) => (\n    <>\n        {soundTypes.map(t => (\n            <SoundType key={t} type={t} active={active} onClick={onClick} />\n        ))}\n    </>\n);\n\nexport default SoundTypeControl;\n","import React, { useEffect, useState, useContext } from 'react';\nimport classnames from 'classnames';\n\nimport playSound from '../../playSound';\nimport { useKey } from '../../hooks';\nimport { frequencies } from '../../constants';\nimport { SoundContext } from '../../Synth';\n\nconst blackKeys = 'wetyuop'.split('');\n\nconst Key = ({ keyboardCode, index, message }) => {\n    const isBlack = blackKeys.indexOf(keyboardCode) >= 0;\n    const [mousePressed, setMousePressed] = useState(false);\n    const keyPressed = useKey(keyboardCode);\n    const { octave, type, duration } = useContext(SoundContext);\n    useEffect(() => {\n        if (keyPressed)\n            playSound(frequencies[index] * 2 ** octave, type, duration);\n    }, [keyPressed, index, octave, type, duration]);\n    return (\n        <div\n            aria-label={message}\n            data-balloon-pos=\"up\"\n            className={classnames('Button', {\n                Black: isBlack,\n                Pressed: keyPressed,\n                MousePressed: mousePressed\n            })}\n            onMouseDown={() => {\n                setMousePressed(true);\n                playSound(frequencies[index] * 2 ** octave, type, duration);\n            }}\n            onMouseUp={() => setMousePressed(false)}\n        ></div>\n    );\n};\n\nexport default Key;\n","import { useState, useEffect } from 'react';\n\nexport const useSequence = () => {\n    const [sequence, setSequence] = useState(new Set([]));\n\n    const toggleSequence = (index, value) => {\n        if (value) {\n            setSequence(sequence.add(index));\n        } else {\n            sequence.delete(index);\n            setSequence(sequence);\n        }\n    };\n    return [sequence, toggleSequence];\n};\n\nexport const useKey = targetKey => {\n    const [pressed, setPressed] = useState(false);\n    const onKeyDown = ({ key }) => {\n        if (targetKey === key) setPressed(true);\n    };\n    const onKeyUp = ({ key }) => {\n        if (targetKey === key) setPressed(false);\n    };\n    useEffect(() => {\n        window.addEventListener('keydown', onKeyDown);\n        window.addEventListener('keyup', onKeyUp);\n\n        return () => {\n            window.removeEventListener('keydown', onKeyDown);\n            window.removeEventListener('keyup', onKeyUp);\n        };\n    }, []);\n    return pressed;\n};\n\nexport const useKeysPress = () => {\n    const [key, setKey] = useState();\n    const [keysPressed, setKeyPressed] = useState(new Set([]));\n    let clonedSet;\n\n    const onKeyDown = e => {\n        setKey(e.key);\n        setKeyPressed(keysPressed.add(e.key));\n    };\n    const onKeyUp = e => {\n        setKey(null);\n        clonedSet = new Set(keysPressed);\n        clonedSet.delete(e.key);\n        setKeyPressed(clonedSet);\n    };\n    useEffect(() => {\n        window.addEventListener('keydown', onKeyDown);\n        window.addEventListener('keyup', onKeyUp);\n\n        return () => {\n            window.removeEventListener('keydown', onKeyDown);\n            window.removeEventListener('keyup', onKeyUp);\n        };\n    }, []);\n    return [key, keysPressed];\n};\n\nexport const useMedia = query => {\n    let [matches, setMatches] = useState(window.matchMedia(query).matches);\n\n    // cDM, cDU\n    useEffect(() => {\n        let media = window.matchMedia(query);\n        if (media.matches !== matches) {\n            setMatches(media.matches);\n        }\n        let listener = () => setMatches(media.matches);\n        media.addListener(listener);\n        return () => media.removeListener(listener);\n    }, [query]);\n\n    return matches;\n};\n","import React from 'react';\nimport Key from '../Key';\n\nimport { keysToNotes, messages } from '../../constants';\n\nconst ButtonBox = ({ showMessages }) => (\n    <div className=\"ButtonBox\">\n        {keysToNotes.map((key, index) => (\n            <Key\n                key={key}\n                message={showMessages ? messages[index] : null}\n                keyboardCode={key}\n                index={index}\n            />\n        ))}\n    </div>\n);\n\nexport default ButtonBox;\n","import React from 'react';\nimport heart from '../../static/heart.svg';\n\nexport default () => (\n    <footer>\n        crafted with <img className=\"heartIcon\" src={heart} alt=\"Logo\" /> by{' '}\n        <a href=\"http://borzeckid.com\">borzecki</a>\n    </footer>\n);\n","import React from 'react';\n\nimport NumericControl from './components/NumericControl';\nimport SoundTypeControl from './components/SoundTypeControl';\nimport ButtonBox from './components/ButtonBox';\nimport Footer from './components/Footer';\n\nimport { soundTypes } from './constants';\nimport { useKeysPress, useMedia } from './hooks';\n\nimport './Synth.sass';\nimport 'balloon-css';\n\nexport const SoundContext = React.createContext();\nconst Separator = () => <div className=\"Separator\" />;\n\nconst Synth = () => {\n    const largeSceen = useMedia('(min-width: 800px)');\n    const [key] = useKeysPress();\n    const [type, setType] = React.useState('triangle');\n    const [octave, setOctave] = React.useState(0);\n    const [duration, setDuration] = React.useState(1.5);\n\n    // control octave and filters\n    React.useEffect(() => {\n        if ('1234'.indexOf(key) >= 0) {\n            setType(soundTypes['1234'.indexOf(key)]);\n        } else if ('-z'.indexOf(key) >= 0) {\n            setOctave(Math.max(octave - 1, -4));\n        } else if ('=x'.indexOf(key) >= 0) {\n            setOctave(Math.min(octave + 1, 5));\n        } else if ('['.indexOf(key) >= 0) {\n            setDuration(Math.max(duration - 0.5, 0.5));\n        } else if (']'.indexOf(key) >= 0) {\n            setDuration(Math.min(duration + 0.5, 10));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [key]);\n\n    return (\n        <SoundContext.Provider value={{ octave, duration, type }}>\n            <SoundTypeControl active={type} onClick={setType} />\n            <Separator />\n            <NumericControl\n                min={-4}\n                max={5}\n                increment={1}\n                value={octave}\n                setValue={setOctave}\n                message=\"this is octave control\"\n            />\n            <NumericControl\n                min={0.5}\n                max={10}\n                increment={0.5}\n                value={duration}\n                setValue={setDuration}\n                message=\"sound duration control\"\n            />\n            <ButtonBox showMessages={largeSceen} />\n            <Footer />\n        </SoundContext.Provider>\n    );\n};\n\nexport default Synth;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Synth from './Synth';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Synth />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}