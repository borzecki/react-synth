{"version":3,"sources":["static/minus.svg","static/plus.svg","static/heart.svg","playSound.js","components/OctaveControl/index.jsx","constants.jsx","components/SoundTypeControl/index.jsx","components/Key/index.jsx","hooks.js","components/ButtonBox/index.jsx","components/Footer/index.jsx","Synth.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","playSound","OctaveControl","_ref","scale","setScale","_useState","useState","_useState2","Object","slicedToArray","pushedButton","setPushedButton","react_default","a","createElement","Fragment","aria-label","data-balloon-pos","className","classnames","ActivePushButton","onMouseDown","onMouseUp","onClick","src","minus","alt","plus","keysToNotes","split","messages","soundTypes","octave","SoundType","type","active","SoundTypeControl","_ref2","map","t","SoundTypeControl_SoundType","key","AudioContext","window","webkitAudioContext","context","frequency","oscillator","createOscillator","gain","createGain","now","currentTime","connect","value","destination","setValueAtTime","exponentialRampToValueAtTime","start","stop","alert","blackKeys","Key","keyboardCode","index","message","isBlack","indexOf","mousePressed","setMousePressed","keyPressed","targetKey","_useState3","_useState4","pressed","setPressed","onKeyDown","onKeyUp","useEffect","addEventListener","removeEventListener","useKey","Math","pow","Black","Pressed","MousePressed","ButtonBox","showMessages","components_Key","Footer","heart","href","Separator","Synth","_useKeysPress","clonedSet","_useState5","_useState6","setKey","_useState7","Set","_useState8","keysPressed","setKeyPressed","e","add","delete","useKeysPress","_React$useState","React","_React$useState2","setType","_React$useState3","_React$useState4","components_SoundTypeControl","Synth_Separator","components_OctaveControl","components_ButtonBox","Boolean","location","hostname","match","ReactDOM","render","src_Synth_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37511dfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/minus.4f28c0eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.e744f4ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.b5e5a96a.svg\";","let AudioContext =\n    window.AudioContext || // Default\n    window.webkitAudioContext || // Safari and old versions of Chrome\n    false;\nlet playSound;\n\nif (AudioContext) {\n    const context = new AudioContext();\n    playSound = (frequency, type) => {\n        const oscillator = context.createOscillator();\n        const gain = context.createGain();\n        const now = context.currentTime;\n\n        oscillator.type = type;\n        oscillator.connect(gain);\n        oscillator.frequency.value = frequency;\n\n        gain.connect(context.destination);\n\n        gain.gain.setValueAtTime(1, now);\n        gain.gain.exponentialRampToValueAtTime(0.00001, now + 2);\n\n        oscillator.start(now);\n        oscillator.stop(now + 2);\n    };\n} else {\n    alert(\n        'Sorry, but the Web Audio API is not supported by your browser. Please, consider upgrading to the latest version or downloading Google Chrome or Mozilla Firefox'\n    );\n    playSound = () => {};\n}\n\nexport default playSound;\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\n\nimport minus from '../../static/minus.svg';\nimport plus from '../../static/plus.svg';\n\nconst OctaveControl = ({ scale, setScale }) => {\n    const [pushedButton, setPushedButton] = useState(null);\n    return (\n        <>\n            <span\n                aria-label=\"Z\"\n                data-balloon-pos=\"up\"\n                className={classnames('PushButton', {\n                    ActivePushButton: pushedButton === 'up'\n                })}\n                onMouseDown={() => {\n                    setPushedButton('up');\n                }}\n                onMouseUp={() => {\n                    setPushedButton();\n                }}\n                onClick={() => setScale(scale - 1)}\n            >\n                <img src={minus} alt=\"minus\" />\n            </span>\n            <span\n                aria-label=\"this is Octave transposer\"\n                data-balloon-pos=\"up\"\n                className=\"OctaveControl\"\n            >\n                {scale}\n            </span>\n            <span\n                aria-label=\"X\"\n                data-balloon-pos=\"up\"\n                className={classnames('PushButton', {\n                    ActivePushButton: pushedButton === 'down'\n                })}\n                onMouseDown={() => {\n                    setPushedButton('down');\n                }}\n                onMouseUp={() => {\n                    setPushedButton();\n                }}\n                onClick={() => setScale(scale + 1)}\n            >\n                <img src={plus} alt=\"plus\" />\n            </span>\n        </>\n    );\n};\n\nexport default OctaveControl;\n","export const keysToNotes = \"awsedftgyhujkolp;'\".split('');\n\nexport const messages = [\n    'Hey!',\n    null,\n    'Welcome 😀',\n    null,\n    null,\n    'Did you know 🤔',\n    null,\n    'You can use your keyboard ⌨️',\n    'To play? 🎹',\n    null,\n    'Try it!',\n    'this is `J`',\n    'K',\n    'and so on',\n    null,\n    'Enjoy 🤩'\n];\n\nexport const soundTypes = ['triangle', 'square', 'sine', 'sawtooth'];\n\nexport const octave = [\n    261.6,\n    277.2,\n    293.7,\n    311.1,\n    329.6,\n    349.2,\n    370.0,\n    392.0,\n    415.3,\n    440.0,\n    466.2,\n    493.9,\n    523.3,\n    554.4,\n    587.3,\n    622.3,\n    659.3,\n    698.5\n];\n\nexport const notes = [\n    'C',\n    'C#',\n    'D',\n    'Eb',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n    'A',\n    'Bb',\n    'B',\n    'C'\n];\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { soundTypes } from '../../constants';\n\nconst SoundType = ({ type, active, onClick }) => (\n    <div\n        className={classnames('PushButton', {\n            ActivePushButton: type === active\n        })}\n        onClick={() => onClick(type)}\n    >\n        {type}\n    </div>\n);\n\nconst SoundTypeControl = ({ active, onClick }) => (\n    <>\n        {soundTypes.map(t => (\n            <SoundType key={t} type={t} active={active} onClick={onClick} />\n        ))}\n    </>\n);\n\nexport default SoundTypeControl;\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\n\nimport playSound from '../../playSound';\nimport { useKey } from '../../hooks';\nimport { octave } from '../../constants';\n\nconst blackKeys = 'wetyuop'.split('');\n\nconst Key = ({ keyboardCode, index, scale, type, message }) => {\n    const isBlack = blackKeys.indexOf(keyboardCode) >= 0;\n    const [mousePressed, setMousePressed] = useState(false);\n    const keyPressed = useKey(keyboardCode);\n    useEffect(() => {\n        if (keyPressed) playSound(octave[index] * 2 ** scale, type);\n    }, [keyPressed, index, scale, type]);\n    return (\n        <div\n            aria-label={message}\n            data-balloon-pos=\"up\"\n            className={classnames('Button', {\n                Black: isBlack,\n                Pressed: keyPressed,\n                MousePressed: mousePressed\n            })}\n            onMouseDown={() => {\n                setMousePressed(true);\n                playSound(octave[index] * 2 ** scale, type);\n            }}\n            onMouseUp={() => setMousePressed(false)}\n        ></div>\n    );\n};\n\nexport default Key;\n","import { useState, useEffect } from 'react';\n\nexport const useSequence = () => {\n    const [sequence, setSequence] = useState(new Set([]));\n\n    const toggleSequence = (index, value) => {\n        if (value) {\n            setSequence(sequence.add(index));\n        } else {\n            sequence.delete(index);\n            setSequence(sequence);\n        }\n    };\n    return [sequence, toggleSequence];\n};\n\nexport const useKey = targetKey => {\n    const [pressed, setPressed] = useState(false);\n    const onKeyDown = ({ key }) => {\n        if (targetKey === key) setPressed(true);\n    };\n    const onKeyUp = ({ key }) => {\n        if (targetKey === key) setPressed(false);\n    };\n    useEffect(() => {\n        window.addEventListener('keydown', onKeyDown);\n        window.addEventListener('keyup', onKeyUp);\n\n        return () => {\n            window.removeEventListener('keydown', onKeyDown);\n            window.removeEventListener('keyup', onKeyUp);\n        };\n    }, []);\n    return pressed;\n};\n\nexport const useKeysPress = () => {\n    const [key, setKey] = useState();\n    const [keysPressed, setKeyPressed] = useState(new Set([]));\n    let clonedSet;\n\n    const onKeyDown = e => {\n        setKey(e.key);\n        setKeyPressed(keysPressed.add(e.key));\n    };\n    const onKeyUp = e => {\n        setKey(null);\n        clonedSet = new Set(keysPressed);\n        clonedSet.delete(e.key);\n        setKeyPressed(clonedSet);\n    };\n    useEffect(() => {\n        window.addEventListener('keydown', onKeyDown);\n        window.addEventListener('keyup', onKeyUp);\n\n        return () => {\n            window.removeEventListener('keydown', onKeyDown);\n            window.removeEventListener('keyup', onKeyUp);\n        };\n    }, []);\n    return [key, keysPressed];\n};\n","import React from 'react';\nimport Key from '../Key';\n\nimport { keysToNotes, messages } from '../../constants';\n\nconst ButtonBox = ({ scale, type, showMessages }) => (\n    <div className=\"ButtonBox\">\n        {keysToNotes.map((key, index) => (\n            <Key\n                key={key}\n                message={showMessages && messages[index]}\n                keyboardCode={key}\n                index={index}\n                scale={scale}\n                type={type}\n            />\n        ))}\n    </div>\n);\n\nexport default ButtonBox;\n","import React from 'react';\nimport heart from '../../static/heart.svg';\n\nexport default () => (\n    <footer>\n        crafted with <img className=\"heartIcon\" src={heart} alt=\"Logo\" /> by{' '}\n        <a href=\"http://borzeckid.com\">borzecki</a>\n    </footer>\n);\n","import React from 'react';\n\nimport OctaveControl from './components/OctaveControl';\nimport SoundTypeControl from './components/SoundTypeControl';\nimport ButtonBox from './components/ButtonBox';\nimport Footer from './components/Footer';\n\nimport { soundTypes } from './constants';\nimport { useKeysPress } from './hooks';\n\nimport './Synth.sass';\nimport 'balloon-css';\n\nconst Separator = () => <div className=\"Separator\" />;\n\nconst Synth = () => {\n    const [key] = useKeysPress();\n    const [type, setType] = React.useState('triangle');\n    const [scale, setScale] = React.useState(0);\n\n    // control octave and filters\n    React.useEffect(() => {\n        if ('1234'.indexOf(key) >= 0) {\n            setType(soundTypes['1234'.indexOf(key)]);\n        } else if ('-z'.indexOf(key) >= 0) {\n            setScale(scale - 1);\n        } else if ('=x'.indexOf(key) >= 0) {\n            setScale(scale + 1);\n        }\n    }, [key]);\n\n    return (\n        <>\n            <SoundTypeControl active={type} onClick={setType} />\n            <Separator />\n            <OctaveControl scale={scale} setScale={setScale} />\n            <ButtonBox scale={scale} type={type} showMessages={true} />\n            <Footer />\n        </>\n    );\n};\n\nexport default Synth;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Synth from './Synth';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Synth />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}